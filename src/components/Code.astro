---
import Icon from 'astro-icon';
import ShikiCode from 'astro/components/Code.astro'
import type {Lang} from 'shiki';
interface Props {
    lang: Lang,
    inline?: boolean,
    file: string,
    filename?: string,
};

const { lang, file, inline = false, filename = file.split("/").at(-1) } = Astro.props;
function getLangIcon(lang: string | undefined) {
    switch (lang) {
        case 'py':
        case 'python':
            return 'vscode-icons:file-type-python'
        case 'java':
            return 'logos:java'
        case 'js':
        case 'javascript':
            return 'vscode-icons:file-type-js-official'
        case 'ts':
        case 'typescript':
            return 'vscode-icons:file-type-typescript-official'
        case 'kt':
        case 'kotlin':
            return 'vscode-icons:file-type-kotlin'
        case 'rust':
        case 'rs':
            return 'noto-v1:crab'
        default:
            return undefined
    }
}
const icon = getLangIcon(file.split('.')[1]) ?? getLangIcon(filename?.split('.')[1]);
const url = file.startsWith("https://") ? file : `${Astro.url.origin}/${file}`
const res = await fetch(url);
const code = await res.text();
---

<div class="codeblock relative">
    <div class="rounded-md bg-slate-800 w-fit px-5 grid grid-flow-col ml-2 shadow-md shadow-slate-950">
        {icon !== undefined && <Icon name={icon} size={'1em'} class={"my-auto"}/>}
        <span class="mx-5 text-center">{filename}</span>
    </div>
    <div class="absolute overflow-hidden top-14 right-5 clipboard-div rounded-md bg-purple-600 bg-opacity-40 p-3 shadow-sm shadow-slate-400">
        <Icon name="system-uicons:clipboard" size={'2em'} class={"hover:text-black hover:w-[2.2em] hover:h-[2.2em]"}>
    </div>
    <ShikiCode code={code} lang={lang} inline={inline}/>
</div>

<script>
    const els = document.getElementsByClassName("codeblock");
    for(let i = 0; i < els.length; i++) {
        const codeblock = els[i] as HTMLDivElement;
        const el = codeblock.children.item(2) as HTMLPreElement | undefined;
        if(el == undefined) break;
        el.style.marginTop = "0";
        el.classList.add("shadow-sm", "shadow-slate-950");
    }

    document.querySelectorAll('div.clipboard-div').forEach(el => {
        el.addEventListener('click', () => navigator.clipboard.writeText(el.parentElement?.children.item(2)?.textContent!));
    });
</script>
